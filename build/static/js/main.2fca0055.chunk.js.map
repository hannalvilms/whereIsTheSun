{"version":3,"sources":["Components/Cache.js","secret.js","App.js","reportWebVitals.js","index.js","Components/Weather.js"],"names":["Cache","input","i","history","length","className","slice","map","key","icon","api","JSON","parse","localStorage","getItem","App","useState","filteredData","setFilteredData","inputVal","setInputVal","setWeather","setDaily","setMyGeo","browserHistory","useHistory","data","type","placeholder","value","onChange","e","searchedCity","target","filter","cities","name","toLowerCase","includes","onKeyPress","fetch","then","response","ok","json","status","Promise","reject","result","unshift","stringify","lat","lng","res","push","catch","error","console","log","onClick","cityName","city","coord","lon","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","component","deg","redirect","stopPropagation","today","Date","time","getHours","getMinutes","getSeconds","days","weatherIcon","sky","location","state","main","weather","Math","round","temp","wind","speed","gust","feels_like","pressure","humidity","daily","anObjectMapped","day","wind_speed","sunrise","document","getElementById"],"mappings":"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","file":"static/js/main.2fca0055.chunk.js","sourcesContent":["import React  from 'react';\nimport {Icon} from \"@iconify/react\";\nimport {history} from '../App';\n\nexport default function Cache(input) {\n    let i = 0;\n    /*\n    const [inputVal, setInputVal] = useState(\"\");\n    const browserHistory = useHistory();\n\n    const search = () => {\n        if (input) {\n            fetch(`${api.base}weather?q=${input.history.location.state.name}&units=metric&APPID=${api.key}`)\n                .then(res => res.json())\n                .then(result => {\n                    setInputVal(result);\n                    console.log(result);\n                    //browserHistory.push(\"/weather\", result);\n                })\n        }\n    }\n    */\n    return (\n        <div>\n            {/*Map through cache*/}\n            {history.length !== 0 && (\n                <div className=\"container row recent-views\">\n                    <p className=\"col-9\">Recently viewed</p>\n                    {history.slice(0, 5).map((history, key) => {\n                        return <div  key={i++} className=\"cache col-6\">\n                            <h3>{history}</h3>\n                            <h5>Check weather</h5>\n                            <Icon icon=\"akar-icons:arrow-right\" />\n                        </div>\n                    })}\n                </div>\n            )}\n        </div>\n    )\n}","export let api = {\n    key:\"65360a361cb378c430986a4c72be7022\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n}","import React, {useState} from 'react';\nimport './style.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport cities from 'cities.json';\nimport Cache from \"./Components/Cache\";\nimport {useHistory} from \"react-router-dom\";\nimport {Icon} from \"@iconify/react\";\nimport {api} from './secret';\n\n//get from cache\nexport let history = getHistory();\nexport function getHistory() {\n    return JSON.parse(localStorage.getItem(\"cache\")) || [];\n}\n\nfunction App() {\n    //define constants\n    const [filteredData, setFilteredData] = useState([]);\n    const [inputVal, setInputVal] = useState(\"\");\n    const [weather, setWeather] = useState({});\n    const [val, setDaily] = useState([]);\n    const [myGeo, setMyGeo] = useState (\"\")\n    let i = 0;\n\n\n    const handleFilter = (e) => {\n        //Input field handler\n        const searchedCity = e.target.value\n        setInputVal(searchedCity);\n        const filter = cities.filter((value) => {\n            return value.name.toLowerCase().includes(searchedCity.toLowerCase());\n        });\n        //check if searched city is an empty string or not\n        if (searchedCity === '') {\n            setFilteredData([])\n        } else {\n            setFilteredData(filter)\n        }\n    }\n\n    //add to cache\n    const addToHistory = function() {\n        history.unshift(filteredData[0].name);\n        localStorage[\"cache\"] = (JSON.stringify(history.slice(0, 5)))\n    }\n    const browserHistory = useHistory();\n\n\n    let data = {}\n    //search by input\n    const search = e => {\n        if (e.key === \"Enter\") {\n            fetch(`${api.base}weather?q=${filteredData[0].name}&units=metric&APPID=${api.key}`)\n                .then(response => {\n                    if (response.ok) {\n                        return response.json()\n                    } else if(response.status === 404) {\n                        return Promise.reject('error 404')\n                    } else {\n                        return Promise.reject('some other error: ' + response.status)\n                    }\n                })\n                .then(result => {\n                    addToHistory()\n                    setWeather(result)\n                    fetch(`${api.base}onecall?lat=${filteredData[0].lat}&lon=${filteredData[0].lng}&units=metric&exclude=hourly,minutely&APPID=${api.key}`)\n                        .then(response => {\n                            if (response.ok) {\n                                return response.json()\n                            } else if(response.status === 404) {\n                                return Promise.reject('error 404')\n                            } else {\n                                return Promise.reject('some other error: ' + response.status)\n                            }\n                        })\n                        .then(res => {\n                            setDaily(res)\n                            data = {result, res}\n                            browserHistory.push(\"/weather\", data);\n                        })\n                        .catch(error => console.log('error is', error));\n                })\n        }\n    }\n\n    // search by location\n    const geo = () => {\n        fetch('http://ip-api.com/json/')\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                } else if(response.status === 404) {\n                    return Promise.reject('error 404')\n                } else {\n                    return Promise.reject('some other error: ' + response.status)\n                }\n            })\n            .then(response => {\n                setMyGeo(response)\n                let cityName = response.city\n\n                fetch(`${api.base}weather?q=${cityName}&units=metric&APPID=${api.key}`)\n                    .then(response => {\n                        if (response.ok) {\n                            return response.json()\n                        } else if(response.status === 404) {\n                            return Promise.reject('error 404')\n                        } else {\n                            return Promise.reject('some other error: ' + response.status)\n                        }\n                    })\n                    .then(result => {\n                        setWeather(result);\n\n                        fetch(`${api.base}onecall?lat=${result.coord.lat}&lon=${result.coord.lon}&units=metric&exclude=hourly,minutely&APPID=${api.key}`)\n                            .then(response => {\n                                if (response.ok) {\n                                    return response.json()\n                                } else if(response.status === 404) {\n                                    return Promise.reject('error 404')\n                                } else {\n                                    return Promise.reject('some other error: ' + response.status)\n                                }\n                            })\n                            .then(res => {\n                                setDaily(res)\n                                data = {result, res}\n                                browserHistory.push(\"/weather\", data);\n                            })\n                    })\n            .catch(error => {\n                console.log(error)\n                alert('Turn off adblocker!')\n            })\n            .catch(error => console.log('error is', error));\n        }\n    )}\n\n    //change the location icon\n    const changeIcon = () => {\n        if(inputVal) {\n            return <Icon icon=\"fluent:location-28-filled\" />\n        } else {\n            return <Icon icon=\"fluent:location-28-regular\" />\n        }\n    }\n\n    //clear user input\n    const clearInput = () => {\n        setFilteredData([]);\n        setInputVal(\"\");\n    }\n\n    return (\n      <div>\n          <div className='header col-lg-12'>\n              <div className='logo'>\n                  <h1 className='waldo'>Where is Waldo</h1>\n                  <h2 className='sun'>the sun</h2>\n                  <hr/>\n              </div>\n          </div>\n          <div  className='search-bar col-12'>\n              {/*Search input*/}\n              <div className='input-container col-12'>\n                  {changeIcon()}\n                  <input\n                      className=\"col-9\"\n                      type=\"text\"\n                      placeholder={'Enter location'}\n                      value={inputVal}\n                      onChange={handleFilter}\n                      onKeyPress={search}\n                  />\n                  {inputVal.length !== 0 && (\n                      <h6 onClick={clearInput}>Clear</h6>\n                  )}\n              </div>\n\n              {/*give search options*/}\n              {filteredData.length !== 0 && (\n                  <div className='dataResult col-12'>\n                      {filteredData.slice(0, 4).map((value, key) => {\n                          return <p className=\"data\" key={i++}> {value.name} </p>\n                      })}\n                      {inputVal[0] && (\n                          <p className='enter'>Press Enter to select</p>\n                      )}\n                  </div>\n              )}\n              <div className=\"col-12\" onClick={geo}>\n                  <h3>Select my current location</h3>\n              </div>\n              {/*Show cache*/}\n              <Cache/>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Weather from \"./Components/Weather\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Route path = \"/home\" component={App}/>\n        <Route path=\"/weather\" component={Weather}/>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\nimport '.././style.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport {useHistory} from \"react-router-dom\";\nimport {Icon} from \"@iconify/react\";\n\nexport default function Weather(input) {\n\n    let i = 0;\n    //redirect to homepage\n    const browserHistory = useHistory();\n    const redirect = (e) => {\n        e.stopPropagation()\n        browserHistory.push(\"/home\");\n    }\n\n    //get time\n    const today = new Date(),\n    time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n\n    //days\n    const days = ['Monday', 'Tueday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\n    //define wind direction\n    const getWindDirection = (deg) => {\n        if (deg>=0 && deg<22.5){\n            return \"N\";\n        }else if (deg>=22.5 && deg<67.5){\n            return \"NE\";\n        }else if (deg>=67.5 && deg<112.5){\n            return \"E\";\n        }else if (deg>=112.5 && deg<157.5){\n            return \"SE\";\n        }else if (deg>=157.5 && deg<202.5){\n            return \"S\";\n        }else if (deg>=202.5 && deg<247.5){\n            return \"SW\";\n        }else if (deg>=247.5 && deg<292.5){\n            return \"W\";\n        }else if (deg>=292.5 && deg<337.5){\n            return \"NW\";\n        }else if (deg>=337.5 && deg<=360){\n            return \"N\";\n        }\n    }\n\n    //define current weather and set icons\n    const weatherIcon = (sky) => {\n        if (sky === 'Rain'){\n            return <Icon icon=\"fluent:weather-rain-24-filled\" />\n        } else if (sky === 'Clouds'){\n            return <Icon icon=\"bi:cloud-fill\" />\n        } else if (sky === 'Clear'){\n            return <Icon icon=\"clarity:sun-solid\" />\n        } else if (sky === 'Thunderstorm'){\n            return <Icon icon=\"ion:thunderstorm\" />\n        } else if (sky === 'Snow'){\n            return <Icon icon=\"bi:cloud-snow-fill\" />\n        } else if (sky === 'Mist'){\n            return <Icon icon=\"ri:mist-fill\" />\n        } else {\n            return <Icon icon=\"bi:cloud-fill\" />\n        }\n    }\n\n    //change location icon\n    const changeIcon = () => {\n        if(input.location.state.result.name) {\n            return <Icon icon=\"fluent:location-28-filled\" />\n        } else {\n            return <Icon icon=\"fluent:location-28-regular\" />\n        }\n    }\n\n    return (\n        <div className=\"results\">\n            <div className=' col-lg-12'>\n                <div className='logo'>\n                    <h1 className='waldo'>Where is Waldo</h1>\n                    <h2 className='sun'>the sun</h2>\n                    <hr/>\n                </div>\n            </div>\n    {/* input */}\n            <div className='weather-search-bar col-12'>\n                <div className=\"search-box\">\n                    <div className='input-container col-12'>\n                        <Icon icon=\"eva:arrow-back-fill\" className=\"back-icon\" onClick={redirect}/>\n                        {changeIcon()}\n                        <input\n                            className=\"col-9\"\n                            type=\"text\"\n                            placeholder={input.location.state.result.name}\n                            value={input.location.state.result.name}\n                            onChange={redirect}\n                            onKeyPress={redirect}\n                        />\n                        {input.location.state.result.name !== 0 && (\n                            <h6 onClick={redirect}>Clear</h6>\n                        )}\n                    </div>\n                </div>\n            </div>\n    {/* weather right now */}\n            <div className=\"forecast col-12\">\n            {(typeof input.history.location.state.result.main !== \"undefined\") ? (\n                <div className=\"today-box col-12\">\n                    <div className=\"col-lg-12 col-md-6 today\">\n                        <div className=\"col-1\">\n                            <div className=\"today-icon\">\n                                {weatherIcon(input.location.state.result.weather[0].main)}\n                            </div>\n                        </div>\n                        <div className=\"col-5\">\n                            <h1>Today</h1>\n                            <div className=\"updated-time\">\n                                <h2>{time}&nbsp;</h2>\n                                <p>(updated at {today.getHours()}.00)</p>\n                            </div>\n                        </div>\n                        <table className=\"col-4\">\n                            <tbody>\n                            <tr>\n                                <td>Temperature:</td>\n                                <td><b>{Math.round(input.history.location.state.result.main.temp)}°C</b></td>\n                            </tr>\n                            <tr>\n                                <td>Wind:</td>\n                                <td><b>{input.history.location.state.result.wind.speed} m/s, {getWindDirection(input.location.state.result.wind.gust)}</b></td>\n                            </tr>\n                            <tr>\n                                <td>Feels like:</td>\n                                <td><b>{Math.round(input.history.location.state.result.main.feels_like)}°C</b></td>\n                            </tr>\n                            <tr>\n                                <td>Pressure:</td>\n                                <td><b>{input.history.location.state.result.main.pressure } mmHg</b></td>\n                            </tr>\n                            <tr>\n                                <td>Humidity:</td>\n                                <td><b>{input.history.location.state.result.main.humidity}%</b></td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            ) : (\"\")}\n    {/* seven day prognose */}\n            <div className=\"col-lg-8 col-md-12 seven-day\">\n                {input.location.state.res.daily !== 0 && (\n                    input.location.state.res.daily.slice(0,7).map((anObjectMapped) => {\n                        return (\n                            <div className=\"weather-card\" key={anObjectMapped.sunrise}>\n                                <h2>{days[i++]}</h2>\n                                {weatherIcon(anObjectMapped.weather[0].main)}\n                                <p>{anObjectMapped.temp.day}°</p>\n                                <p>{anObjectMapped.wind_speed} m/s</p>\n                            </div>\n                        );\n                    })\n                )}\n            </div>\n            </div>\n        </div>\n    )\n}\n"],"sourceRoot":""}