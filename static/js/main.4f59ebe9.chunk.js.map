{"version":3,"sources":["img/thunder.jpg","img/rain.jpg","img/snow2.jpg","img/fog5.jpg","img/sand.jpg","img/leaves.jpg","img/cloudy3.jpg","utils.js","secret.js","Components/Cache.js","App.js","reportWebVitals.js","index.js","Components/Weather.js"],"names":["module","exports","backgroundImg","history","JSON","parse","localStorage","getItem","weatherIcon","sky","className","icon","api","Cache","browserHistory","useHistory","data","useState","setWeather","setDaily","length","slice","map","i","onClick","e","type","preventDefault","fetch","then","response","ok","json","result","coord","lat","lon","res","push","catch","error","alert","search","key","App","searchDown","filteredData","setFilteredData","inputVal","setInputVal","setMyGeo","inputRef","React","useRef","searchRef","createRef","j","useEffect","current","focus","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","locationSearch","city","url","includes","unshift","stringify","addToHistory","viewBox","id","d","width","startOffset","xlinkHref","ref","changeIcon","placeholder","value","onChange","searchedCity","target","filter","cities","name","toLowerCase","handleFilter","resultsItems","children","classList","contains","remove","resetFocus","onKeyDown","active","document","activeElement","dataLenght","keyCode","nextSibling","add","innerText","previousSibling","moveFocus","onKeyPress","cityName","geo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","component","input","description","deg","location","state","today","Date","time","toTimeString","redirect","stopPropagation","weather","main","thunder","rain","snow","fog","sand","clouds","clear","style","backgroundImage","getHours","Math","round","temp","wind","speed","gust","feels_like","pressure","humidity","daily","day","dt","sunrise","date","String","getDate","wind_speed","getElementById"],"mappings":"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","file":"static/js/main.4f59ebe9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thunder.d3f19533.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain.cac4037d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow2.e5a62d6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fog5.a9b1d27c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sand.09d7ae65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leaves.6b10f880.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy3.2993703e.jpg\";","import React, {useState, useLayoutEffect} from 'react';\nimport {Icon} from \"@iconify/react\";\nimport thunder from './img/thunder.jpg';\nimport rain from './img/rain.jpg';\nimport snow from './img/snow2.jpg';\nimport fog from './img/fog5.jpg';\nimport sand from './img/sand.jpg';\nimport clear from './img/leaves.jpg';\nimport clouds from './img/cloudy3.jpg';\n\n//get from cache\nexport function getHistory() {\n    return JSON.parse(localStorage.getItem(\"cache\")) || [];\n}\nexport let history = getHistory();\n//add to cache\nexport function addToHistory(searchDown) {\n    if (!localStorage[\"cache\"].includes(searchDown) ) {\n        history.unshift(searchDown);\n    localStorage[\"cache\"] = (JSON.stringify(history.slice(0, 5)))\n    }\n}\n\n//change the location icon\nexport function changeIcon(inputVal) {\n    if(inputVal) {\n        return <Icon icon=\"fluent:location-28-filled\" />\n    } else {\n        return <Icon icon=\"fluent:location-16-regular\" />\n    }\n}\n\nexport function getDate(dt) {\n    var date = new Date(dt * 1000);\n    var stringify = String(date).slice(0,3);\n    if (stringify === 'Mon') {\n        return <h2>Monday</h2>\n    } else if (stringify === 'Tue') {\n        return <h2>Tuesday</h2>\n    } else if (stringify === 'Wed') {\n        return <h2>Wednesday</h2>\n    } else if (stringify === 'Thu') {\n        return <h2>Thursday</h2>\n    } else if (stringify === 'Fri') {\n        return <h2>Friday</h2>\n    } else if (stringify === 'Sat') {\n        return <h2>Saturday</h2>\n    } else if (stringify === 'Sun') {\n        return <h2>Sunday</h2>\n    }\n}\n\nexport let backgroundImg;\nexport function changeBg(description) {\n    if (description === 'Thunderstorm') {\n        backgroundImg = thunder\n    } else if (description === 'Drizzle' || description === 'Rain') {\n        backgroundImg = rain\n    } else if (description === 'Snow') {\n        backgroundImg = snow\n    } else if (description === 'Haze') {\n        backgroundImg = fog\n    } else if (description === 'Dust') {\n        backgroundImg = sand\n    } else if (description === 'Clouds') {\n        backgroundImg = clouds\n    } else {\n        backgroundImg = clear;\n    }\n}\n\nexport function getWindDirection(deg) {\n    if (deg>=0 && deg<22.5){\n        return \"N\";\n    }else if (deg>=22.5 && deg<67.5){\n        return \"NE\";\n    }else if (deg>=67.5 && deg<112.5){\n        return \"E\";\n    }else if (deg>=112.5 && deg<157.5){\n        return \"SE\";\n    }else if (deg>=157.5 && deg<202.5){\n        return \"S\";\n    }else if (deg>=202.5 && deg<247.5){\n        return \"SW\";\n    }else if (deg>=247.5 && deg<292.5){\n        return \"W\";\n    }else if (deg>=292.5 && deg<337.5){\n        return \"NW\";\n    }else if (deg>=337.5 && deg<=360){\n        return \"N\";\n    }\n}\n\n//define current weather and set icons\nexport function weatherIcon(sky, className) {\n    if (sky === 'Rain' || sky === 'Drizzle'){\n        return <Icon className={className} icon=\"ph:cloud-rain-thin\"/>\n    } else if (sky === 'Clouds'){\n        return <Icon className={className} icon=\"ph:cloud-thin\"/>\n    } else if (sky === 'Clear'){\n        return <Icon className={className} icon=\"ph:sun-thin\"/>\n    } else if (sky === 'Thunderstorm'){\n        return <Icon className={className} icon=\"ph:lightning-thin\"/>\n    } else if (sky === 'Snow'){\n        return <Icon className={className} icon=\"ph:snowflake-thin\"/>\n    } else if (sky === 'Mist' || sky === 'Smoke' || sky === 'Dust' || sky === 'Haze' || sky === 'Fog'){\n        return <Icon className={className} icon=\"ph:cloud-fog-thin\"/>\n    } else {\n        return <Icon className={className} icon=\"ph:cloud-thin\"/>\n    }\n}\n\nexport function useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n      }\n      window.addEventListener('resize', updateSize);\n      updateSize();\n      return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n","export let api = {\n    key:\"65360a361cb378c430986a4c72be7022\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n}","import React, {useState}  from 'react';\nimport {Icon} from \"@iconify/react\";\nimport {history} from '../utils';\nimport {api} from '../secret';\nimport {useHistory} from \"react-router-dom\";\n\nexport default function Cache() {\n    const browserHistory = useHistory();\n    let data = {}\n    const [weather, setWeather] = useState({});\n    const [val, setDaily] = useState([]);\n    const search = (e, i) => {\n        if (e.type === 'click') {\n            e.preventDefault();\n            fetch(`${api.base}weather?q=${history[i-1]}&units=metric&APPID=${api.key}`)\n                .then(response => {\n                    if (response.ok) {\n                        return response.json()\n                    }\n                })\n                .then(result => {\n                    setWeather(result);\n                    fetch(`${api.base}onecall?lat=${result.coord.lat}&lon=${result.coord.lon}&units=metric&exclude=hourly,minutely&APPID=${api.key}`)\n                        .then(response => {\n                            if (response.ok) {\n                                return response.json()\n                            }\n                        })\n                        .then(res => {\n                            setDaily(res)\n                            data = {result, res}\n                            browserHistory.push(\"/whereIsTheSun/weather\", data);\n                        }\n                    )\n                })\n                .catch(error => \n                    alert('Oops, something went wrong!')\n                );\n        }\n    }\n\n    return (\n        <div className=\"container main-cache\">\n            {/*Map through cache*/}\n            {history.length !== 0 && (\n                <div className=\"row\">\n                    <p className=\"recently-viewed text-center\">Recently viewed</p>\n                    {history.slice(0, 5).map((history, i) => {\n                        return <div  onClick={(e) => search(e, i)} key={i++} className=\"cache col-12\">\n                            <h5>{history}</h5>\n                            <p>Check weather <Icon icon=\"akar-icons:arrow-right\" /></p>\n                        </div>\n                    })}\n                </div>\n            )}\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport './style.css';\nimport cities from 'cities.json';\nimport Cache from \"./Components/Cache\";\nimport {useHistory} from \"react-router-dom\";\nimport {api} from './secret';\nimport {useWindowSize, changeIcon, addToHistory} from './utils';\n\nfunction App() {\n    //define variables\n    const [filteredData, setFilteredData] = useState([]);\n    const [inputVal, setInputVal] = useState(\"\");\n    const [weather, setWeather] = useState({});\n    const [val, setDaily] = useState([]);\n    const [myGeo, setMyGeo] = useState (\"\");\n    const inputRef = React.useRef();\n    const searchRef = React.createRef();\n    const browserHistory = useHistory();\n    let data = {}\n    let j = 0;\n    let className = 'data';\n    let searchDown;\n\n    const handleFilter = (e) => {\n        //Input field handler\n        const searchedCity = e.target.value;\n        setInputVal(searchedCity);\n        const filter = cities.filter((value) => {\n            return value.name.toLowerCase().includes(searchedCity.toLowerCase());\n        });\n        //check if searched city is an empty string or not\n        if (searchedCity === '') {\n            setFilteredData([])\n        } else {\n            setFilteredData(filter)\n        }\n    }\n\n    useEffect(() => {\n        inputRef.current.focus();\n    }, []);    \n\n    //clear user input\n    const clearInput = () => {\n        setFilteredData([]);\n        setInputVal(\"\");\n    }\n    \n    const moveFocus = (e) => {\n        const active = document.activeElement;\n        const resultsItems = searchRef.current.children[1].children;\n        const dataLenght = resultsItems.length;\n        if(e.keyCode === 40 && active.nextSibling && j < dataLenght) {\n            resultsItems[j].classList.add('selected');\n            if (j >= 1 && j < dataLenght && resultsItems[j-1].classList.contains('selected')) {\n                resultsItems[j-1].classList.remove('selected');\n            }\n            j++;\n            searchDown = resultsItems[j-1].innerText;\n        }\n        if (e.keyCode === 38 && active.previousSibling && j>0) {\n            if (resultsItems[dataLenght-1].classList.contains('selected')) {\n                j=j-1;\n                resultsItems[dataLenght-1].classList.remove('selected');\n            }\n            if (dataLenght !== 1) {\n                resultsItems[j-1].classList.add('selected');\n                j--;\n                if (j >= 0 && j < dataLenght-1 && resultsItems[j].classList.contains('selected')) {\n                    resultsItems[j+1].classList.remove('selected');\n                }\n            }\n            searchDown = resultsItems[j].innerText;\n        }\n    };\n\n    const resetFocus = () => {\n        const resultsItems = searchRef.current.children[1].children;\n        for (let i = 0; i < resultsItems.length; i++) {\n            if (resultsItems[i].classList.contains('selected')) {\n                resultsItems[i].classList.remove('selected');\n            }\n        }\n    }\n    //detect window resize\n    useWindowSize();\n    \n    const locationSearch = (e, city, url) => {\n        e.preventDefault();\n        fetch(url)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n            })\n            .then(result => {\n                addToHistory(city);\n                setWeather(result);\n                fetch(`${api.base}onecall?lat=${result.coord.lat}&lon=${result.coord.lon}&units=metric&exclude=hourly,minutely&APPID=${api.key}`)\n                    .then(response => {\n                        if (response.ok) {\n                            return response.json()\n                        }\n                    })\n                    .then(res => {\n                        setDaily(res)\n                        data = {result, res}\n                        browserHistory.push(\"/whereIsTheSun/weather\", data);\n                    })\n            })\n            .catch(error => {\n                alert('Oops, something went wrong!')}\n            );\n    }\n    //search by input\n    const search = e => {\n        if (e.key === 'Enter' || e.type === 'click') {\n            locationSearch(e, searchDown, `${api.base}weather?q=${searchDown}&units=metric&APPID=${api.key}`);\n        }\n    }\n    // search by location\n    const geo = (e) => {\n        e.preventDefault();\n        fetch('http://ip-api.com/json/')\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                } \n            })\n            .then(response => {\n                setMyGeo(response)\n                let cityName = response.city\n                locationSearch(e, cityName, `${api.base}weather?q=${cityName}&units=metric&APPID=${api.key}`, 'Turn off adblocker!')\n            })\n            .catch(error => {\n                alert('Turn off your adblocker!')\n            })\n    }\n\n    return (\n      <div className='container-fluid'>\n          <div className='row'>\n            <div className='header col-lg-4 col-md-4 col-sm-12 col-12'>\n                <div className='logo'>\n                    <svg viewBox=\"0 0 500 200\">\n                        <path id=\"curve\" d=\"M73.2,148.6c4-6.1,65.5-96.8,178.6-95.6c111.3,1.2,170.8,90.3,175.1,97\" />\n                        <text width=\"500\">\n                            <textPath startOffset=\"12%\" xlinkHref=\"#curve\">\n                            Where is the\n                            </textPath>\n                        </text>\n                    </svg>\n                    <h2 className='sun'>sun</h2>\n                </div>\n                {/*Show cache*/}\n                {(window.innerWidth > 767) ? (<Cache/>) : ('')}\n            </div>\n            <form  \n                className='search-bar col-8 col-md-8 col-sm-12 col-12' \n                ref={searchRef}>\n                {/*Search input*/}\n                    <div className='input-container col-12'>\n                        {changeIcon(inputVal)}\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter location\"\n                            value={inputVal}\n                            ref={inputRef}\n                            onChange={(e) => {handleFilter(e); resetFocus()}}\n                            onKeyDown={(e) => {moveFocus(e); }}\n                            onKeyPress={search}\n                        />\n                        {inputVal.length !== 0 && (\n                            <h6 onClick={clearInput}>Clear</h6>\n                        )}\n                    </div>\n                {/*give search options*/}\n                {filteredData.length !== 0 && (\n                    <div className='search-results'>\n                        {filteredData.slice(0, 6).map((value, j) => {\n                            return <p\n                            className={className}\n                            key={j++}\n                            onClick={(e) => {\n                                searchDown=value.name;\n                                search(e);\n                                }\n                            }\n                            > {value.name} </p>\n                        })}\n                    </div>\n                )}\n                <div className=\"col-12 geo\">\n                    <button onClick={(e) => geo(e)}>Select my current location</button>\n                </div>\n            </form>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Weather from \"./Components/Weather\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Route exact path = \"/whereIsTheSun\" component={App}/>\n        <Route exact path=\"/whereIsTheSun/weather\" component={Weather}/>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\nimport '../style.css';\nimport {useHistory} from \"react-router-dom\";\nimport {Icon} from \"@iconify/react\";\nimport { \n    getDate, \n    getWindDirection, \n    weatherIcon, \n    changeBg, \n    backgroundImg \n} from '../utils';\n\nexport default function Weather(input) {\n    let i = 1;\n    const result = input.location.state.result;\n    const res = input.location.state.res;\n    //get time\n    const today = new Date(),\n    time = today.toTimeString().slice(0,8)\n    //redirect to homepage\n    const browserHistory = useHistory();\n    const redirect = (e) => {\n        e.stopPropagation()\n        browserHistory.push(\"/whereIsTheSun\");\n    }\n    changeBg(input.location.state.result.weather[0].main);\n\n    return (\n        <div className=\"container-fluid forecast-body\" style={{\n            backgroundImage:`\n                linear-gradient(\n                270deg,\n                rgba(255,255,255,0) 5%, \n                rgba(217,\t195,\t185\t, 1) 100%), \n                url('${backgroundImg}')\n            `\n          }}>\n            <div className='row'>\n                <div className='col-lg-4 col-md-4 col-sm-12 col-12'>\n                    <div className='logo redirect' onClick={redirect}>\n                        <svg viewBox=\"0 0 500 200\">\n                            <path id=\"curve\" d=\"M73.2,148.6c4-6.1,65.5-96.8,178.6-95.6c111.3,1.2,170.8,90.3,175.1,97\" />\n                            <text width=\"500\">\n                                <textPath startOffset=\"12%\" xlinkHref=\"#curve\">\n                                Where is the\n                                </textPath>\n                            </text>\n                        </svg>\n                        <h2 className='sun'>sun</h2>\n                    </div>\n                </div>\n                <div className=\"weather-content col-lg-10 col-md-10 col-sm-10 col-10\">\n                    <div className='weather-location col-lg-9 col-md-9 col-sm-11 col-11'>\n                        <Icon icon=\"eva:arrow-back-fill\" className=\"back-icon\" onClick={redirect}/>\n                        <h1 onClick={redirect}>{result.name}</h1>\n                    </div>\n                    {/* weather right now */}\n                    <div className=\"col-lg-9 col-md-9 col-sm-11 col-11 row\">\n                        {(typeof result.main !== \"undefined\") ? (\n                            <div className=\"today-box col-12 row\">\n                                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                                    <div className=\"today-icon col-12\">\n                                        <h1>Today</h1>\n                                        {weatherIcon(result.weather[0].main, 'weather-icon')}\n                                    </div>\n                                    <div className=\"updated-time\">\n                                        <h2>{time}&nbsp;</h2>\n                                        <p>(updated at {today.getHours()}.00)</p>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                                    <table>\n                                        <tbody>\n                                        <tr>\n                                            <td>Temperature:</td>\n                                            <td><b>{Math.round(result.main.temp)}°C</b></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Wind:</td>\n                                            <td><b>{result.wind.speed} m/s, {getWindDirection(result.wind.gust)}</b></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Feels like:</td>\n                                            <td><b>{Math.round(result.main.feels_like)}°C</b></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Pressure:</td>\n                                            <td><b>{result.main.pressure } mmHg</b></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Humidity:</td>\n                                            <td><b>{result.main.humidity}%</b></td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        ) : (\"\")}\n                    </div>\n                    {/* seven day prognose */}\n                    <div className=\"col-lg-12 col-md-9 col-sm-11 col-11 seven-day\">\n                        {res.daily !== 0 && (\n                            res.daily.slice(0,7).map((day) => {\n                                var dt = res.daily[i++].dt;\n                                return (\n                                    <div className=\"weather-card\" key={day.sunrise}>\n                                        {getDate(dt)}\n                                        {weatherIcon(day.weather[0].main)}\n                                        <p>{Math.round(day.temp.day)}°</p>\n                                        <p>{Math.round(day.wind_speed)} m/s</p>\n                                    </div>\n                                );\n                            })\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"sourceRoot":""}